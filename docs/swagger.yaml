swagger: '2.0'
info:
  version: '1.0.0'
  title: 'P3 API'
  description: 'Simple API to manage things'
host: 'localhost:5000'
basePath: '/'
consumes:
  - 'application/json'
produces:
  - 'application/json'
paths:
  /things:
    get:
      summary: 'Get a list of things'
      responses:
        '200':
          description: 'Everything went well'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/Thing'

  /users/signUp:
    post:
      summary: Registration of a new user
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            type: object
            required:
              - firstname
              - lastname
              - phone_number
              - email
              - password
              - password_confirmation
            properties:
              firstname:
                type: string
                example: François
              lastname:
                type: string
                example: Dupont
              phone_number:
                type: string
                pattern: /^(\+|00)[0-9]?()[0-9](\s|\S)(\d[0-9]{0,})$/
                description: The phone number must be preceded by the phone indicator (i.e. 33 for France, 221 for Senegal etc.) 
                example: "33642519412"
              email:
                type: string
                pattern : ^(([^<>()[\]\\.,;:\s@“]+(\.[^<>()[\]\\.,;:\s@“]+)*)|(“.+“))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
                example: francois.dupont@email.com
              password:
                type: string
                pattern: /^(?=.{6,}$)(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*\W).*$/
                description: The password must contain one uppercase, one lowercase, one number and one special character and must be at least 6 characters long.
                example: Password!12345
              password_confirmation:
                type: string
                example: Password!12345

      responses:
        200:
          description: User successfully registered
          schema:
            type: object
            $ref: '#/definitions/Sign Up'
            properties:
              id:
                type: integer
                description: The user ID.
              firstname:
                type: string
                description: The user firstname.
              lastname:
                type: string
                description: The user lastname. 
              email:
                type: string
                description: The user email. 
      
        401:
            description: The information provided did not match the requirements

    # $ref: '#/definitions/Registration'

  /auth/login:
    post:
      summary: User authentification
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                example: francois.dupont@email.com

              password:
                type: string
                example: Password!12345
      responses:
        200:
          description: User authentificated
          schema:
            type: object
            properties:
              id:
                type: integer
                description: The user ID.
              firstname:
                type: string
                description: The user firstname.
              lastname:
                type: string
                description: The user lastname.

        401:
          description: 'Invalid credentials'

        400:
          description: Calling this route with an empty request body (JSON) is a no-op.

  /auth/logout:
    get: 
      summary: User logout
      responses:
        200:
          description: User logged out
        
  
  /users/{user_id}/campaigns:
    get:
      summary: Get all campaigns for a specific user.
      parameters:
        - in: path
          name: user_id
          type: integer
          required: true
          description: Numeric ID of the user to get.
      produces : 
            - application/json
      responses:
        200:
          description: A list of campaigns
          schema:
            type: array
            items : 
              type: object
              properties:
                id:
                  type: integer
                  description: The campaign ID.
                id_client_user:
                  type: integer
                  description: The user ID.
                name:
                  type: string
                  description: The campaign name.
                text_message:
                  type: string
                  description: The message which has been vocalized.
                vocal_message_file_url:
                  type: string
                  description: Path storage of the audio file.
                date:
                  type: string
                  description: Expected date of campaign broadcasting. 
                sending_status:
                  type: integer
                  description: Status of the campaign (0 if pending, 1 if completed)

        401:
          description: 'Unhautorized. The user ID does not match the user identified by the cookie session or the current user is not allowed to get the user campaigns.'

    post:
      summary: Create a campaign
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            type: object
            required:
              - name
              - text_message
              - vocal_message_file_url
              - date
            properties:
              name:
                type: string
                description: The campaign name.
              text_message:
                type: string
                description: The message which has been vocalized.
              vocal_message_file_url:
                type: string
                description: Path storage of the audio file.
              date:
                type: string
                format : date-time
                description: Expected date of campaign broadcasting (YYYY-MM-DDThh:mm:ssZ)
      responses:
        201:
          description: Campaign created
          schema:
            type: object 
            properties:
              id:
                type: integer
                description: The campaign ID.
              id_client_user:
                type: integer
                description: The user ID.
              name:
                type: string
                description: The campaign name.
              text_message:
                type: string
                description: The message which has been vocalized.
              vocal_message_file_url:
                type: string
                description: Path storage of the audio file.
              date:
                type: string
                description: Expected date of campaign broadcasting. 
              sending_status:
                type: integer
                description: Status of the campaign (0 if pending, 1 if completed)

        401:
          description: 'Unhautorized. The user ID does not match the user identified by the cookie session or the current user.'

        400:
          description: Calling this route with an empty request body (JSON) is a no-op.
    
  /users/{users_id}/uploadtext:
    post:
      summary: Upload a text to vocalize it 
      consumes:
        - multipart/form-data
      parameters:
        - in: body
          name: user
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                example: francois.dupont@email.com

              password:
                type: string
                example: Password!12345
      responses:
        200:
          description: User authentificated
          schema:
            type: object
            properties:
              id:
                type: integer
                description: The user ID.
              firstname:
                type: string
                description: The user firstname.
              lastname:
                type: string
                description: The user lastname.

        401:
          description: 'Invalid credentials'

        400:
          description: Calling this route with an empty request body (JSON) is a no-op.      

definitions:
  Sign Up:
    properties:
      firstname:
        type: 'string'
      lastname:
        type: 'string'
      phone_number:
        type: string
        pattern: /^(\+|00)[0-9]?()[0-9](\s|\S)(\d[0-9]{0,})$/
        description: The phone number must be preceded by the phone indicator (i.e. 33 for France, 221 for Senegal etc.) 
      email:
        type: 'string'
        pattern : ^(([^<>()[\]\\.,;:\s@“]+(\.[^<>()[\]\\.,;:\s@“]+)*)|(“.+“))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
      password:
        type: string
        pattern: /^(?=.{6,}$)(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*\W).*$/
        description: The password must contain one uppercase, one lowercase, one number and one special character and must be at least 6 characters long.
        minLength: 6
      password_confirmation:
        type: string
        minLength: 6
    required:
      - firstname
      - lastname 
      - email
      - phone_number
      - password
      - password_confirmation